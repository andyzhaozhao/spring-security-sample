package cn.com.taiji.webapi;import cn.com.taiji.config.SaltProperties;import cn.com.taiji.dto.BootStrapTreeViewDTO;import cn.com.taiji.dto.MenuDTO;import cn.com.taiji.dto.ResultDTO;import cn.com.taiji.dto.RoleDTO;import cn.com.taiji.repository.RoleMenuRepository;import cn.com.taiji.service.MenuService;import cn.com.taiji.service.RoleService;import com.fasterxml.jackson.core.JsonParseException;import com.fasterxml.jackson.core.type.TypeReference;import com.fasterxml.jackson.databind.JsonMappingException;import com.fasterxml.jackson.databind.ObjectMapper;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import java.io.IOException;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;/** * 类名称：RoleController * 类描述： * 创建人：wanghw * 创建时间：2018年2月5日 下午7:30:49 */@RestController@RequestMapping("sys")public class RoleAPIController {    private static final Logger log = LoggerFactory.getLogger(RoleAPIController.class);    @Autowired    private RoleService roleService;    @Autowired    private MenuService menuService;    @Autowired    private ObjectMapper objectMapper;    @Autowired    private RoleMenuRepository roleMenuRepository;    @Autowired    private SaltProperties saltProperties;    /**     * @param models     * @return String     * @throws     * @Description: 加载角色管理信息     * @author wanghw     * @date 2018年2月5日     */    @PostMapping("/roleList")    public ResultDTO roleList(@RequestParam(value = "models", required = false) String models) {        String salt = saltProperties.getSalt();        Map searchParameters = new HashMap();        if (models != null && models.length() > 0) {            try {                searchParameters = objectMapper.readValue(models, new TypeReference<Map>() {                });            } catch (JsonParseException e) {                log.error("JsonParseException{}:", e.getMessage());                e.printStackTrace();            } catch (JsonMappingException e) {                log.error("JsonMappingException{}:", e.getMessage());            } catch (IOException e) {                log.error("IOException{}:", e.getMessage());                e.printStackTrace();            }        }        Map map = roleService.getPage(searchParameters, salt);        ResultDTO result = new ResultDTO();        result.setObj(map);        return result;//        // 角色表格数据//        model.addAttribute("list", map.get("roles"));//        // 总条数//        model.addAttribute("total", map.get("total"));//        return "sys/role-list";    }    /**     * @param model     * @param models     * @return ResultDTO     * @throws     * @Description: 简要进行方法说明，角色保存     * @author wanghw     * @date 2018年2月5日     */    @PostMapping("/role-save")    public ResultDTO roleAdd(Model model, @RequestParam("models") String models) {        String salt = saltProperties.getSalt();        ResultDTO result = new ResultDTO();        result.setSuccess(false);        List<RoleDTO> list = new ArrayList<RoleDTO>();        if (models != null && models.length() > 0) {            try {                list = objectMapper.readValue(models, new TypeReference<List<RoleDTO>>() {                });            } catch (JsonParseException e) {                log.error("JsonParseException{}:", e.getMessage());                model.addAttribute("error", e.getMessage());            } catch (IOException e) {                log.error("IOException{}:", e.getMessage());                model.addAttribute("error", e.getMessage());            }        }        if (!model.containsAttribute("error")) {            try {                roleService.add(list, salt);                result.setSuccess(true);            } catch (Exception e) {                log.error("Exception{}:", e.getMessage());                model.addAttribute("error", e.getMessage());                result.setSuccess(false);                result.setMsg(e.getMessage());            }        }        return result;    }    /**     * @param model     * @param ids     * @return String     * @throws     * @Description: 删除角色信息     * @author wanghw     * @date 2018年2月5日     */    @PostMapping("/role-delete")    public ResultDTO roleDelete(Model model, @RequestParam(required = false, value = "ids[]") String[] ids) {        ResultDTO resultDTO = new ResultDTO();        this.roleService.deleteRole(ids);        resultDTO.setObj("删除成功");        resultDTO.setSuccess(true);        return resultDTO;    }    /**     * @param userIds     * @param preUserIds     * @param roleId     * @return ResultDTO     * @throws     * @Description: 保存分配角色用户     * @author wanghw     * @date 2018年2月5日     */    @PostMapping("/role-user-save")    public ResultDTO roleUserSave(@RequestParam(required = false, value = "userIds[]") String[] userIds, String preUserIds, String roleId) {        ResultDTO result = new ResultDTO();        try {            this.roleService.saveRoleUsers(userIds, preUserIds, roleId);            result.setSuccess(true);            result.setMsg("成功分配角色用户！");        } catch (Exception e) {        }        return result;    }    /**     * @param menuIds     * @param preMenuIds     * @param roleId     * @return ResultDTO     * @throws     * @Description: 分配角色菜单     * @author wanghw     * @date 2018年2月5日     */    @PostMapping("/role-menu-save")    public ResultDTO roleMenuSave(@RequestParam(required = false, value = "menuIds[]") String[] menuIds,                                  @RequestParam(required = false, value = "preMenuIds[]") String[] preMenuIds,                                  String roleId) {        ResultDTO json = new ResultDTO();        try {            this.roleService.saveRoleMenus(menuIds, preMenuIds, roleId);            json.setSuccess(true);            json.setMsg("成功分配角色菜单！");        } catch (Exception e) {        }        return json;    }    /**     *     * @param roleId     * @return ResultDTO     * @throws     * @Description: 简要进行方法说明，并对基础数据类型的参数和返回值加以说明     * @author wanghw     * @date 2018年2月5日     */    @PostMapping("/role-menu-tree")    public ResultDTO menuTree(@RequestParam("roleId") String roleId) {        ResultDTO result = new ResultDTO();        List<MenuDTO> menus = menuService.findRootTree();        //Get selected menus        List<String> selectedMenuIds = this.roleMenuRepository.findMenuIdsByRoleId(roleId);        //make treeViewDTO        List<BootStrapTreeViewDTO> menuTree = BootStrapTreeViewDTO.menuTree(menus, selectedMenuIds);        Map resultMap = new HashMap<>();        resultMap.put("selectedMenus",selectedMenuIds);        resultMap.put("menuTree",menuTree);        result.setObj(resultMap);        return result;    }}